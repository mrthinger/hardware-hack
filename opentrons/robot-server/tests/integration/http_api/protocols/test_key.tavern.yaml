test_name: Verify protocol key.

marks:
  - usefixtures:
      - ot2_server_base_url
stages:
  - name: Upload basic_transfer_standalone protocol with key
    request:
      url: '{ot2_server_base_url}/protocols'
      method: POST
      files:
        files: 'tests/integration/protocols/basic_transfer_standalone.py'
      data:
        key: protocol_key
    response:
      save:
        json:
          protocol_id: data.id
      status_code: 201
      json:
        data:
          id: !anystr
          protocolType: python
          files:
            - name: basic_transfer_standalone.py
              role: main
          createdAt: !re_fullmatch "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+(Z|([+-]\\d{2}:\\d{2}))"
          robotType: OT-2 Standard
          protocolKind: standard
          metadata:
            apiLevel: '2.6'
            protocolName: basic_transfer_standalone
            author: engineer@opentrons.com
          analyses: []
          analysisSummaries:
            - id: !anystr
              status: pending
              runTimeParameters: []
          key: protocol_key
  - name: Verify the key in GET /protocols
    request:
      url: '{ot2_server_base_url}/protocols'
      method: GET
    response:
      strict:
        - json:off
      status_code: 200
      json:
        data:
          - id: '{protocol_id}'
            key: protocol_key

  - name: Verify the key in GET /protocols/{protocol_id}
    request:
      url: '{ot2_server_base_url}/protocols/{protocol_id}'
      method: GET
    response:
      strict:
        - json:off
      status_code: 200
      json:
        data:
          id: '{protocol_id}'
          key: protocol_key

---
test_name: Protocols may have a duplicate key.

marks:
  - usefixtures:
      - ot2_server_base_url
stages:
  - name: Upload basic_transfer_standalone protocol with key
    request:
      url: '{ot2_server_base_url}/protocols'
      method: POST
      files:
        files: 'tests/integration/protocols/basic_transfer_standalone.py'
      data:
        key: duplicate_key
    response:
      strict:
        - json:off
      save:
        json:
          protocol_id1: data.id
      status_code: 201
      json:
        data:
          id: !anystr
          protocolType: python
          files:
            - name: basic_transfer_standalone.py
              role: main
          metadata:
            apiLevel: '2.6'
            protocolName: basic_transfer_standalone
            author: engineer@opentrons.com
          key: duplicate_key
  - name: Upload basic_transfer_with_config protocol with same key
    request:
      url: '{ot2_server_base_url}/protocols'
      method: POST
      files:
        files: 'tests/integration/protocols/basic_transfer_with_config.py'
      data:
        key: duplicate_key
    response:
      strict:
        - json:off
      save:
        json:
          protocol_id2: data.id
      status_code: 201
      json:
        data:
          id: !anystr
          protocolType: python
          files:
            - name: basic_transfer_with_config.py
              role: main
          metadata:
            apiLevel: '2.6'
          key: duplicate_key
  - name: Get protocols and validate id and key
    request:
      url: '{ot2_server_base_url}/protocols'
      method: GET
    response:
      strict:
        - json:off
      json:
        data:
          - id: '{protocol_id1}'
            key: duplicate_key
          - id: '{protocol_id2}'
            key: duplicate_key

---
test_name: Protocols sources not get duplicated.

marks:
  - usefixtures:
      - ot2_server_base_url
stages:
  - name: Upload basic_transfer_standalone protocol with key
    request:
      url: '{ot2_server_base_url}/protocols'
      method: POST
      files:
        files: 'tests/integration/protocols/basic_transfer_standalone.py'
      data:
        key: duplicate_key
    response:
      strict:
        - json:off
      save:
        json:
          protocol_id1: data.id
      status_code: 201
      json:
        data:
          id: !anystr
          protocolType: python
          files:
            - name: basic_transfer_standalone.py
              role: main
          metadata:
            apiLevel: '2.6'
            protocolName: basic_transfer_standalone
            author: engineer@opentrons.com
          key: duplicate_key
  - name: Upload basic_transfer_standalone protocol with same key
    # add a delay before starting to let previous analysis complete
    delay_before: 2
    request:
      url: '{ot2_server_base_url}/protocols'
      method: POST
      files:
        files: 'tests/integration/protocols/basic_transfer_standalone.py'
      data:
        key: duplicate_key
    response:
      strict:
        - json:off
      save:
        json:
          protocol_id2: data.id
      # 200 instead of 201 because a new resource should not get created
      status_code: 200
      json:
        data:
          id: !anystr
          protocolType: python
          files:
            - name: basic_transfer_standalone.py
              role: main
          metadata:
            apiLevel: '2.6'
          key: duplicate_key
  - name: Get protocols and validate id and key
    request:
      url: '{ot2_server_base_url}/protocols'
      method: GET
    response:
      strict:
        - json:off
      json:
        data:
          - id: '{protocol_id1}'
            key: duplicate_key
